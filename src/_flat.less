@import "_variables.less";

* {
  scrollbar-color: @color-scrollbar transparent;
  scrollbar-width: thin;
}
::-webkit-scrollbar {
  height: 4px !important;

  @media (hover: none) {
    width: 0 !important;
    height: 0 !important;
  }
}
::-webkit-scrollbar-thumb {
  background-color: @color-scrollbar !important;
}
::-webkit-scrollbar-track {
  background-color: transparent !important;
}

@{body}.flat {
  .dijitTextBox {
    box-sizing: border-box;
  }

  // ---------------------------------------------------------------------------
  // colors and general appearance
  // ---------------------------------------------------------------------------
  .dijitContentPane,
  .dijitDialog,
  .dijitTab.dijitChecked,
  .dijitTabPaneWrapper {
    background-color: @default-bg;
  }
  #feedsTab,
  #filterDlg_Actions#filterDlg_Actions,
  #filterDlg_Matches#filterDlg_Matches,
  #footer#footer,
  .dijitAccordionChildWrapper.dijitAccordionChildWrapper,
  .dijitAccordionTitle.dijitAccordionTitle,
  .dijitCheckBox.dijitCheckBox:not(.dijitChecked)::before,
  .dijitDialog .dijitToolbar,
  .dijitSelect.dijit.dijit.dijit .dijitButtonContents,
  .dijitSelect.dijit.dijit.dijit .dijitButtonNode,
  .dijitSplitter.dijitSplitter,
  .dijitTab.dijitTab:not(.dijitChecked) {
    background-color: transparent;
  }
  &.ttrss_prefs #header > a:hover,
  .dijitTab.dijitHover:not(.dijitChecked),
  .dijitTreeRowHover,
  .dijitToolbar {
    background-color: @color-fade2;
  }
  .dijitAccordionInnerContainer,
  label.dijitButton.dijitButton,
  :is(.dijitButton, .dijitDropDownButton) .dijitButtonNode,
  :is(.dijitButton, .dijitDropDownButton).alt-info .dijitButtonNode,
  .dijitTextBox :is(.dijitDownArrowButton, .dijitUpArrowButton) {
    background-color: @bg-button;
  }
  .dijitAccordionInnerContainer.dijitHover,
  label.dijitButton.dijitButton:hover,
  :is(.dijitButton, .dijitDropDownButton):where(.dijitFocused, .dijitHover) .dijitButtonNode,
  :is(.dijitButton, .dijitDropDownButton).alt-info:where(.dijitFocused, .dijitHover) .dijitButtonNode,
  .dijitTextBox :is(.dijitDownArrowButtonHover, .dijitUpArrowButtonHover),
  .dijitToolbar .dijitHover:not(.dijitSelect) .dijitButtonNode {
    background-color: @bg-button-hover;
  }
  &.ttrss_prefs #header > a:active,
  .dijitAccordionInnerContainer.dijitActive,
  label.dijitButton.dijitButton:active,
  :is(.dijitButton, .dijitDropDownButton):where(.dijitActive) .dijitButtonNode,
  :is(.dijitButton, .dijitDropDownButton).alt-info:where(.dijitActive) .dijitButtonNode,
  .dijitTab.dijitActive:not(.dijitChecked),
  .dijitTextBox :is(.dijitDownArrowButtonActive, .dijitUpArrowButtonActive),
  .dijitToolbar .dijitActive:not(.dijitSelect) .dijitButtonNode {
    background-color: @bg-button-active;
  }
  .dijitAccordionInnerContainer {
    transition-duration: 0.1s;

    &.dijitSelected {
      background-color: mix(@color-accent, @default-bg, @fade6);

      .dijitAccordionTitle {
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
        background-color: @color-accent;
      }
    }
  }
  .dijitCheckBox,
  .dijitComboBoxMenu,
  .dijitComboBoxMenuPopup,
  .dijitMenu,
  .dijitMenuPopup,
  .dijitMultiSelect,
  .dijitSelect,
  .dijitSelect .dijitButtonNode,
  .dijitSelectMenu,
  .dijitTextBox.dijitTextBox.dijitTextBox {
    background-color: @bg-input;
  }
  &.ttrss_prefs #header > a:active,
  label.dijitButton.dijitButton.dijitButton, // adjust fake buttons
  [class*="alt-"] .dijitButtonNode.dijitButtonNode, // colored buttons need higher specificity
  .dijitButtonNode.dijitButtonNode, // not stronger to keep toolbar buttons borderless
  .dijitToolbar :is(.dijitActive, .dijitHover) .dijitButtonNode, // not weaker to override default toolbar button
  .dijitAccordionChildWrapper.dijitAccordionChildWrapper,
  .dijitAccordionInnerContainer,
  .dijitCheckBox.dijitCheckBox,
  .dijitDialog,
  .dijitDialog .panel.panel,
  .dijitDialogTitleBar,
  .dijitMenu,
  .dijitMenuSeparatorTop,
  .dijitMultiSelect,
  .dijitSelect,
  .dijitTab.dijitActive:not(.dijitChecked),
  .dijitTab.dijitChecked,
  .dijitTabPaneWrapper,
  .dijitTextBox.dijitTextBox {
    border-color: @border-darker;
  }
  :is(.dijitCheckBox, .dijitMultiSelect, .dijitSelect, .dijitTextBox) {
    &:is(.dijitActive, .dijitFocused, .dijitHover):not(.dijitDisabled) {
      border-color: @color-accent;
    }
  }
  .dijitCheckBox.dijitCheckBox:not(.dijitChecked)::before {
    color: transparent;
  }
  :is(.dijitButton .material-icons, .dijitDisabled, .dijitDisabled .dijitMenuItemLabel) {
    color: unset !important; // fix icons flashing in accent color on closing accordion pane
  }
  @{button-selector},
  :is(.dijitComboBox .dijitButtonNode, .dijitSpinner .dijitArrowButton, label.dijitButton) {
    transition: all 0.15s;
  }
  .dijitActive@{button-selector},
  .dijitActive:is(.dijitComboBox .dijitButtonNode, .dijitSpinner .dijitArrowButton),
  label.dijitButton:active {
    transition: none;
  }
  :is(
      .dijitButton,
      .dijitCheckBox,
      .dijitComboButton,
      .dijitDropDownButton,
      .dijitMultiSelect,
      .dijitSelect,
      .dijitTextBox
    ) {
    transition: border 0.2s, box-shadow 0.2s;

    &:is(.dijitActive, .dijitFocused):not(.dijitDisabled) {
      box-shadow: 0 0 0 2px fade(@color-accent, @fade6);
    }
  }
  :is(.dijitButton, .dijitComboButton, .dijitDropDownButton, .dijitMultiSelect) {
    border-radius: 4px;
  }
  :is(.dijitMultiSelect, .dijitSelectActive) {
    box-shadow: none;
  }
  .dijitDialogUnderlay {
    opacity: @fade6;
  }
  .dijitSplitterThumb {
    display: none;
  }
  .alt-primary {
    .color-buttons(darken(@color-accent, 5%));
  }
  .alt-success {
    .color-buttons(shade(@green, 20%));
  }
  .alt-warning {
    .color-buttons(shade(spin(@orange, -7.5deg), 15%));
  }
  .alt-danger {
    .color-buttons(shade(@red, 10%));
  }
  .alt-info.alt-info {
    .dijitButtonNode {
      color: @color-link;
    }
    &:is(.dijitFocused, .dijitHover) .dijitButtonNode {
      border-color: currentColor;
      color: saturate(mix(@default-fg, @color-link, 20%), 20%);
    }
  }
  .dijitDisabled {
    opacity: 0.5;
  }
  :is(*, .dijitDisabled) {
    .dijitButtonNode {
      color: @default-text;
    }
    &[class*="alt-"] .dijitButtonNode {
      color: fade(@white, @fade9);
    }
    &.alt-info .dijitButtonNode {
      color: @color-link;
    }
  }
  // align dijitSelect and dijitText text
  .dijitSelect .dijitInputField {
    padding-left: 6px;
  }

  // ---------------------------------------------------------------------------
  // layout and exceptions
  // ---------------------------------------------------------------------------
  label.checkbox {
    display: inline-flex !important;
    align-items: center;
    min-height: 30px;
    vertical-align: middle;
    gap: 10px;

    :is(.dijitButton, .dijitSelect, .dijitTextBox) {
      margin-block: 0;
    }
  }
  .dijitCheckBox {
    flex-shrink: 0;
  }
  // arrow icons, expando animation
  .dijitDropDownButton .dijitArrowButtonInner,
  .dijitArrowButton,
  .dijitTreeExpandoClosed,
  .dijitTreeExpandoOpened {
    &::before {
      content: "\f006";
    }
  }
  :is(.dijitTreeExpandoClosed, .dijitTreeExpandoOpened) {
    position: relative;
    top: -1px;
    left: -2px;
    transition: all 0.2s !important;
    font-size: 20px;
  }
  .dijitTreeExpandoClosed {
    transform: translate(3px, 3px) rotate(-90deg);
  }
  .dijitToolbar {
    margin: 8px;
    padding: 4px;
    border: 1px solid @border-default;
    border-radius: 4px;

    :is(.dijitButton, .dijitComboButton, .dijitDropDownButton) {
      margin: 0;

      &:is(.dijitActive, .dijitFocused):not(.dijitDisabled) {
        box-shadow: none;
      }
    }
    // event log severity selector, search
    :is(.dijitSelect, .dijitTextBox) {
      margin: 3px 0;
    }
    .dijitSelect .dijitButtonNode {
      padding-block: 2px;
    }
  }
  .dijitDialogPaneContent .dijitToolbar {
    margin: 0 0 8px;
    padding: 0;
    border: none;
  }
  :is(.dijitMultiSelect, .dijitTab.dijitActive) {
    color: @default-text;
  }
  .dijitTab:not(.dijitChecked) {
    border: 1px solid transparent;
  }
  .dijitTabContainerTop-tabs .dijitTabChecked {
    border-bottom-color: transparent;
  }
  .dijitTabContainerLeft-tabs {
    margin-right: -0.4px; // fix rounding issues

    .dijitTabChecked {
      border-right-color: transparent;
    }
  }
  &.flat :is(code, pre),
  .dijitTextArea {
    font-family: @fonts-mono;
  }
  // panels used for authentication/app passwords, some plugins
  .panel.panel {
    border-radius: 4px;
    border-color: @border-default;
  }

  // ---------------------------------------------------------------------------
  // widget layout fixes
  // ---------------------------------------------------------------------------
  :is(.dijitDialogTitleBar, .dijitDialogPaneContent) {
    right: 0;
    width: auto !important;
  }
  :is(.dijitButton, .dijitComboButton, .dijitDropDownButton, .dijitToggleButton, .dijitSelect, .dijitTextBox) {
    margin: 4px 4px 4px 0;

    &.pull-right {
      margin-inline: 4px 0;
    }
  }
  :is(.dijitDialog footer, .dijitDialog .dlgButtons) :last-child {
    margin-right: 0;
  }
  :is(label.dijitButton, .dijitButton i.material-icons, .tabLabel > i.material-icons) {
    top: 0;
  }
  // specify `span.dijitButtonContents` to not affect `td.dijitButtonContents` of `.dijitSelect`
  :is(label.dijitButton, span.dijitButtonContents, .dijitButtonText) {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    height: 20px; // adjust icon-only buttons
  }
  label.dijitButton {
    display: inline-flex;
    padding: 4px 8px;

    a {
      all: unset; // bookmarklets
    }
  }
  .dijitTab {
    vertical-align: top;
  }
  .tabLabel {
    display: flex;
    align-items: center;
    gap: 4px;
    min-height: 18px;

    .material-icons {
      width: 18px;
    }
  }
  .dijitToolbar {
    display: flex;
    flex-wrap: wrap;

    > :is(.pull-right, [style*="float"]) {
      order: 1;
      margin-left: auto;
      padding-right: 0 !important; // for filters tab search field
    }
    // manage profiles: fix input growing when validation icon is added
    .dijitValidationTextBox .dijitValidationContainer {
      padding: 3px;
    }
  }
}
