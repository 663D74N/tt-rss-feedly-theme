@import "_variables.less";
@import "_feeds-holder.less";
@import "_toolbar-frame.less";
@import "_content-wrap.less";
@import "_content.less";
@import "_overlay.less";

@font-face {
  font-family: "SansCn";
  font-style: normal;
  font-weight: normal;
  src: local("Arial Narrow"), local("Liberation Sans Narrow"),
    url("feedly/fonts/texgyreheroscn-regular-webfont.woff") format("woff"),
    url("feedly/fonts/texgyreheroscn-regular-webfont.ttf") format("truetype");
}

@font-face {
  font-family: "SansCn";
  font-style: normal;
  font-weight: bold;
  src: local("HelveticaNeue-CondensedBold"), local("Arial Narrow Bold"),
    local("Liberation Sans Narrow Bold"),
    url("feedly/fonts/texgyreheroscn-bold-webfont.woff") format("woff"),
    url("feedly/fonts/texgyreheroscn-bold-webfont.ttf") format("truetype");
}

@font-face {
  font-family: "SansCn";
  font-style: italic;
  font-weight: normal;
  src: local("Arial Narrow Italic"), local("Liberation Sans Narrow Italic"),
    url("feedly/fonts/texgyreheroscn-italic-webfont.woff") format("woff"),
    url("feedly/fonts/texgyreheroscn-italic-webfont.ttf") format("truetype");
}

@font-face {
  font-family: "SansCn";
  font-style: italic;
  font-weight: bold;
  src: local("Arial Narrow Bold Italic"),
    local("Liberation Sans Narrow Bold Italic"),
    url("feedly/fonts/texgyreheroscn-bolditalic-webfont.woff") format("woff"),
    url("feedly/fonts/texgyreheroscn-bolditalic-webfont.ttf") format("truetype");
}

::-webkit-scrollbar {
  height: 4px;
}

body.flat.ttrss_main ::-webkit-scrollbar-track {
  background-color: transparent;
}

.dijitOffScreen {
  left: -101vw !important;
}

body.ttrss_main {
  background-color: @default-bg;
  color: @default-text;

  #main {
    background-color: @color-panel-bg !important;
  }
  &:not(.ttrss_prefs) #main {
    padding-left: @feeds-toggle-width;
  }

  span.highlight {
    margin: -0.1em -0.2em;
    padding: 0.1em 0.2em;
    border-radius: 0.2em;
    background-color: rgba(255, 192, 0, 0.5);
    color: @fg-text-muted;
  }

  #pref_feeds_errors_btn,
  .exception-contents h3,
  .Error:not(.dijitTreeRowSelected) .dijitTreeLabel,
  #feeds-holder .Error .dijitTreeLabel,
  .icon-error,
  .net-alert {
    color: @color-error !important;
  }

  #updates-available {
    padding-right: 0 !important;
    color: @color-marked !important;
  }

  #feedEditDlg img.feedIcon {
    border-color: @color-fade3;
    background-color: #fff;
  }

  // ---------------------------------------------------------------------------
  // preferences
  // ---------------------------------------------------------------------------
  &.ttrss_prefs {
    :is(h1, h2, h3, h4) {
      margin-top: 60px;

      + :is(h1, h2, h3, h4) {
        margin-top: 20px;
      }
    }
    :is(h2, h3, h4) {
      font-size: 14px;
    }
    h2 {
      padding-bottom: 4px;
      border: 0 solid @color-fade3;
      border-width: 0 0 1px;
      letter-spacing: 0.05em;
      text-transform: uppercase;
    }

    // qr code for authenticator
    img[src^="data:image/png"] {
      background-color: #fff;
    }

    #header {
      display: flex;
      align-items: center;
      margin-top: 1px;
      padding: 0;

      > a {
        display: inline-flex;
        margin-left: 8px;
        padding: 6px 16px 7px;
        transition: background-color 0.2s;
        border: 1px solid transparent;
        color: @default-text;
        font-size: 14px;
        text-decoration: none;

        &::before {
          content: "exit_to_app";
          margin: 0 4px;
          color: @color-accent;
          font-family: "Material Icons";
          font-size: 18px;
          line-height: 1;
        }
      }
    }

    // visual fixes:
    // some icons rendered too wide in top tabs
    .tabLabel .material-icons {
      width: 18px;
    }
    // broken focus outline of buttons in plugin installer
    .plugin-installer-list li > .dijitButton {
      margin-top: 8px;
      padding: 0;
    }
    // my feeds: missing spacing on right text
    .feedParam {
      margin-right: 16px;
      opacity: 0.6;
      font-size: 13px;
    }

    .phpinfo {
      img {
        display: block;
        background-color: transparent;
      }
      // colored text for syntax highlighting
      font {
        padding: 0 5px;
        border-radius: 4px;
        background-color: #fff;
      }
      a:not([href]) {
        color: inherit;
        text-decoration: none;
      }
      :is(h1, h2, table) {
        margin-bottom: 20px;
      }
      :is(h1, h2) {
        padding-left: 12px;
      }
      table :is(h1, h2) {
        padding-left: 0;
      }
      h1 {
        font-size: 28px;
      }
      h2 {
        padding-top: 50px;
        padding-bottom: 0;
        border-width: 1px 0 0;
        font-size: 20px;
        letter-spacing: 0;
        text-transform: none;
      }
      :is(th, td) {
        padding: 8px 12px;
        border-color: @color-fade2;
        vertical-align: top;
      }
      .p {
        margin: 1em 0;
        font: inherit;
        letter-spacing: 0;
        text-transform: none;
      }
      :is(.p, .v) {
        color: @fg-text-muted;
      }
      td.v {
        font-family: var(--fonts-mono);
      }
    }

    // plugin "effective config"
    #config-items-list {
      th,
      td {
        padding: 8px 12px;
      }
      tr:hover,
      td.gray {
        background-color: @color-fade2;
      }
      th,
      td:not(:last-child) {
        border-color: @border-light;
      }
      .envvar_prefix,
      td.redacted {
        opacity: 1;
        color: @color-fade5;
      }
    }
  }

  // ---------------------------------------------------------------------------
  // dijit widgets
  // ---------------------------------------------------------------------------
  .dijitContentPane,
  .dijitDialog,
  .dijitTab.dijitChecked,
  .dijitTabPaneWrapper {
    background-color: @default-bg;
  }
  #feedsTab,
  #filterDlg_Actions#filterDlg_Actions,
  #filterDlg_Matches#filterDlg_Matches,
  #footer#footer,
  .dijitAccordionChildWrapper.dijitAccordionChildWrapper,
  .dijitAccordionTitle.dijitAccordionTitle,
  .dijitCheckBox.dijitCheckBox:not(.dijitChecked)::before,
  .dijitDialog .dijitToolbar,
  .dijitSplitter.dijitSplitter,
  .dijitTab.dijitTab:not(.dijitChecked) {
    background-color: transparent;
  }
  &.ttrss_prefs #header > a:hover,
  .dijitTab.dijitHover:not(.dijitChecked) {
    background-color: @color-fade1;
  }
  .dijitAccordionInnerContainer,
  .dijitButton.dijitButton:not(.dijit),
  :is(.dijitButton, .dijitDropDownButton) .dijitButtonNode,
  .dijitTextBox :is(.dijitDownArrowButton, .dijitUpArrowButton),
  .dijitToolbar {
    background-color: mix(@default-fg, @default-bg, 4%);
  }
  .dijitAccordionInnerContainer.dijitHover,
  .dijitButton.dijitButton:not(.dijit):hover,
  :is(.dijitButton, .dijitDropDownButton):where(.dijitFocused, .dijitHover)
    .dijitButtonNode,
  .dijitTextBox :is(.dijitDownArrowButtonHover, .dijitUpArrowButtonHover),
  .dijitToolbar .dijitHover:not(.dijitSelect) .dijitButtonNode,
  .dijitTreeRowHover {
    background-color: mix(@default-fg, @default-bg, 7%);
  }
  &.ttrss_prefs #header > a:active,
  .dijitAccordionInnerContainer.dijitActive,
  .dijitButton.dijitButton:not(.dijit):active,
  :is(.dijitButton, .dijitDropDownButton):where(.dijitActive) .dijitButtonNode,
  .dijitTab.dijitActive:not(.dijitChecked),
  .dijitTextBox :is(.dijitDownArrowButtonActive, .dijitUpArrowButtonActive),
  .dijitToolbar .dijitActive:not(.dijitSelect) .dijitButtonNode {
    background-color: shade(@default-bg, 15%);
  }
  .dijitAccordionInnerContainer {
    transition-duration: 0.1s;

    &.dijitSelected {
      background-color: mix(@color-accent, @default-bg, 45%);

      .dijitAccordionTitle {
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
        background-color: @color-accent;
      }
    }
  }
  .dijitCheckBox,
  .dijitComboBoxMenu,
  .dijitComboBoxMenuPopup,
  .dijitMenu,
  .dijitMenuPopup,
  .dijitMultiSelect,
  .dijitSelect,
  .dijitSelect .dijitButtonNode,
  .dijitSelectMenu,
  .dijitTextBox.dijitTextBox.dijitTextBox {
    background-color: @color-input;
  }
  &.ttrss_prefs #header > a:active,
  .dijitAccordionChildWrapper.dijitAccordionChildWrapper,
  .dijitAccordionInnerContainer,
  .dijitButton.dijitButton:not(.dijit),
  .dijitButtonNode.dijitButtonNode,
  .dijitCheckBox.dijitCheckBox,
  .dijitDialog,
  .dijitDialogTitleBar,
  .dijitMenu,
  .dijitMenuSeparatorTop,
  .dijitMultiSelect,
  .dijitSelect,
  .dijitTab.dijitActive:not(.dijitChecked),
  .dijitTab.dijitChecked,
  .dijitTabPaneWrapper,
  .dijitTextBox.dijitTextBox,
  .dijitToolbar :is(.dijitActive, .dijitHover) .dijitButtonNode {
    border-color: @color-fade3;
  }
  :is(.dijitCheckBox, .dijitMultiSelect, .dijitSelect, .dijitTextBox) {
    &:is(.dijitActive, .dijitFocused, .dijitHover):not(.dijitDisabled) {
      border-color: @color-accent;
    }
  }
  .dijitCheckBox.dijitChecked {
    background-color: @color-accent;
  }
  .dijitCheckBox.dijitCheckBox:not(.dijitChecked)::before {
    color: transparent;
  }
  :is(
      .dijitButton,
      .dijitCheckBox,
      .dijitComboButton,
      .dijitDropDownButton,
      .dijitMultiSelect,
      .dijitSelect,
      .dijitTextBox
    ) {
    &:is(.dijitActive, .dijitFocused):not(.dijitDisabled) {
      box-shadow: 0 0 0 2px fade(@color-accent, 45%);
    }
  }
  :is(
      .dijitButton,
      .dijitComboButton,
      .dijitDropDownButton,
      .dijitMultiSelect
    ) {
    border-radius: 4px;
  }
  .dijitMultiSelect,
  .dijitSelectActive,
  .dijitToolbar
    :is(.dijitButton, .dijitComboButton, .dijitDropDownButton, .dijitSelect) {
    &:is(.dijitActive, .dijitFocused):not(.dijitDisabled) {
      box-shadow: none;
    }
  }
  .dijitMultiSelect,
  .dijitTab.dijitActive {
    color: @default-text;
  }
  .dijitTab:not(.dijitChecked) {
    border: 1px solid transparent;
  }
  .dijitTabContainerTop-tabs .dijitTabChecked {
    border-bottom-color: transparent;
  }
  .dijitTabContainerLeft-tabs .dijitTabChecked {
    border-right-color: transparent;
  }
  .dijitDisabled {
    opacity: 0.5;
    &,
    .dijitButtonNode {
      color: @default-text;
    }
  }
  .dijitTextArea {
    font-family: var(--fonts-mono);
  }
  .dijitDropDownButton .dijitArrowButtonInner::before,
  .dijitArrowButton::before,
  .dijitTreeExpandoOpened::before {
    content: "\f006";
  }
  .dijitTreeExpandoClosed::before {
    content: "\f005";
  }
  .dijitTreeExpando::before {
    position: relative;
    top: -1px;
    left: -2px;
    font-size: 20px;
  }
  // bookmarklets
  .dijitButton:not(.dijit) a {
    color: inherit;
    text-decoration: none;
  }
  .dijitSplitterThumb {
    display: none;
  }
  .dijitDialogUnderlay {
    opacity: 0.4;
  }
}
